{
  "address": "0xdaf6E3B8dA54c1cA9052e02be06868Eda7544a8C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cryptoDevsContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdsClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6132071f7e37b040a0e673eca67a0e7b22dbda52e557cb5d9141ddb3ae576aec",
  "receipt": {
    "to": null,
    "from": "0xfDa537a28d8C137f8519FCC3C1F1aeC8471801C2",
    "contractAddress": "0xdaf6E3B8dA54c1cA9052e02be06868Eda7544a8C",
    "transactionIndex": 20,
    "gasUsed": "2079017",
    "logsBloom": "0x
    "blockHash": "0x1e0d21cf812f2b4ba8be4b7309dc171b7f9ebd6e071846d1d8b476188142fbcc",
    "transactionHash": "0x6132071f7e37b040a0e673eca67a0e7b22dbda52e557cb5d9141ddb3ae576aec",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 8322525,
        "transactionHash": "0x6132071f7e37b040a0e673eca67a0e7b22dbda52e557cb5d9141ddb3ae576aec",
        "address": "0xdaf6E3B8dA54c1cA9052e02be06868Eda7544a8C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fda537a28d8c137f8519fcc3c1f1aec8471801c2"
        ],
        "data": "0x",
        "logIndex": 44,
        "blockHash": "0x1e0d21cf812f2b4ba8be4b7309dc171b7f9ebd6e071846d1d8b476188142fbcc"
      }
    ],
    "blockNumber": 8322525,
    "cumulativeGasUsed": "3999448",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3ab6d31582602950Afd6e174D55e45954699f310"
  ],
  "numDeployments": 5,
  "solcInputHash": "64cfe24f4b875f10681f003daa054c95",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cryptoDevsContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdsClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoDevToken.sol\":\"CryptoDevToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CryptoDevToken.sol\":{\"content\":\"// SPDX-License Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./ICryptoDevs.sol\\\";\\n\\ncontract CryptoDevToken is ERC20, Ownable {\\n    uint256 public constant tokenPrice = 0.001 ether;\\n    uint256 public constant maxTotalSupply = 10000 * 10 ** 18;\\n    uint256 public constant tokensPerNFT = 10 * 10 ** 18;\\n    ICryptoDevs CryptoDevsNft;\\n\\n    mapping(uint256 => bool) public tokenIdsClaimed;\\n\\n    constructor(address _cryptoDevsContract) ERC20(\\\"Crypto Dev Token\\\", \\\"CD\\\") {\\n        CryptoDevsNft = ICryptoDevs(_cryptoDevsContract);\\n    }\\n\\n    function mint(uint256 amount) public payable {\\n        uint256 _requiredPrice = amount * tokenPrice;\\n        uint256 amountInDecimals = amount * 10 ** 18;\\n\\n        require(msg.value >= _requiredPrice, \\\"ETH sent is not enough\\\");\\n        require(\\n            (totalSupply() + amountInDecimals) <= maxTotalSupply,\\n            \\\"Supply limit exceeded\\\"\\n        );\\n\\n        _mint(msg.sender, amountInDecimals);\\n    }\\n\\n    function claim() public {\\n        uint256 balance = CryptoDevsNft.balanceOf(msg.sender); // this balance shows the number of nfts the user has.\\n        require(balance > 0, \\\"You don't own any Crypto Dev Nft\\\");\\n\\n        uint256 amount = 0; // amount keeps track of number of unclaimed tokenIds\\n\\n        for (uint256 i = 0; i < balance; i++) {\\n            uint256 tokenId = CryptoDevsNft.tokenOfOwnerByIndex(msg.sender, i);\\n\\n            if (!tokenIdsClaimed[tokenId]) {\\n                amount += 1;\\n                tokenIdsClaimed[tokenId] = true;\\n            }\\n        }\\n\\n        require(balance > 0, \\\"You have already claimed all the tokens\\\");\\n        _mint(msg.sender, amount * tokensPerNFT);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"Nothing to withdraw, contract balance empty\\\");\\n\\n        address _owner = owner();\\n        (bool sent, ) = _owner.call{value: amount}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }\\n\\n    // Function to receive Ether. msg.data must be empty\\n    receive() external payable {}\\n\\n    // Fallback function is called when msg.data is not empty\\n    fallback() external payable {}\\n}\\n\",\"keccak256\":\"0x4cd6cc33506293aec446416b920b88d809a8218b4f4fe5b0ab63ed7b436baa64\"},\"contracts/ICryptoDevs.sol\":{\"content\":\"// SPDX-License Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface ICryptoDevs {\\n    function tokenOfOwnerByIndex(\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256 tokenId);\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0xf1823e19b8483f897f40f1e2c6a0be25a6c6e16933cacc829741e50e716604dc\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620026b9380380620026b98339818101604052810190620000379190620002d4565b6040518060400160405280601081526020017f43727970746f2044657620546f6b656e000000000000000000000000000000008152506040518060400160405280600281526020017f43440000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200020d565b508060049080519060200190620000d49291906200020d565b505050620000f7620000eb6200013f60201b60201c565b6200014760201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003be565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200021b906200033a565b90600052602060002090601f0160209004810192826200023f57600085556200028b565b82601f106200025a57805160ff19168380011785556200028b565b828001600101855582156200028b579182015b828111156200028a5782518255916020019190600101906200026d565b5b5090506200029a91906200029e565b5090565b5b80821115620002b95760008160009055506001016200029f565b5090565b600081519050620002ce81620003a4565b92915050565b600060208284031215620002ed57620002ec6200039f565b5b6000620002fd84828501620002bd565b91505092915050565b600062000313826200031a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200035357607f821691505b602082108114156200036a576200036962000370565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b620003af8162000306565b8114620003bb57600080fd5b50565b6122eb80620003ce6000396000f3fe60806040526004361061012e5760003560e01c80635f3690af116100ab57806395d89b411161006f57806395d89b41146103da578063a0712d6814610405578063a457c2d714610421578063a9059cbb1461045e578063dd62ed3e1461049b578063f2fde38b146104d857610135565b80635f3690af146102f357806370a0823114610330578063715018a61461036d5780637ff9b596146103845780638da5cb5b146103af57610135565b8063313ce567116100f2578063313ce56714610232578063395093511461025d5780633ccfd60b1461029a5780634e71d92d146102b15780635afcc2f5146102c857610135565b806306fdde0314610137578063095ea7b31461016257806318160ddd1461019f57806323b872dd146101ca5780632ab4d0521461020757610135565b3661013557005b005b34801561014357600080fd5b5061014c610501565b60405161015991906119f8565b60405180910390f35b34801561016e57600080fd5b5061018960048036038101906101849190611622565b610593565b60405161019691906119dd565b60405180910390f35b3480156101ab57600080fd5b506101b46105b6565b6040516101c19190611c1a565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec91906115cf565b6105c0565b6040516101fe91906119dd565b60405180910390f35b34801561021357600080fd5b5061021c6105ef565b6040516102299190611c1a565b60405180910390f35b34801561023e57600080fd5b506102476105fd565b6040516102549190611c35565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190611622565b610606565b60405161029191906119dd565b60405180910390f35b3480156102a657600080fd5b506102af61063d565b005b3480156102bd57600080fd5b506102c661074a565b005b3480156102d457600080fd5b506102dd6109d3565b6040516102ea9190611c1a565b60405180910390f35b3480156102ff57600080fd5b5061031a60048036038101906103159190611662565b6109df565b60405161032791906119dd565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190611562565b6109ff565b6040516103649190611c1a565b60405180910390f35b34801561037957600080fd5b50610382610a47565b005b34801561039057600080fd5b50610399610a5b565b6040516103a69190611c1a565b60405180910390f35b3480156103bb57600080fd5b506103c4610a66565b6040516103d19190611999565b60405180910390f35b3480156103e657600080fd5b506103ef610a90565b6040516103fc91906119f8565b60405180910390f35b61041f600480360381019061041a9190611662565b610b22565b005b34801561042d57600080fd5b5061044860048036038101906104439190611622565b610c02565b60405161045591906119dd565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190611622565b610c79565b60405161049291906119dd565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd919061158f565b610c9c565b6040516104cf9190611c1a565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa9190611562565b610d23565b005b60606003805461051090611daf565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611daf565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b60008061059e610da7565b90506105ab818585610daf565b600191505092915050565b6000600254905090565b6000806105cb610da7565b90506105d8858285610f7a565b6105e3858585611006565b60019150509392505050565b69021e19e0c9bab240000081565b60006012905090565b600080610611610da7565b90506106328185856106238589610c9c565b61062d9190611c77565b610daf565b600191505092915050565b61064561127e565b60004790506000811161068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068490611b5a565b60405180910390fd5b6000610697610a66565b905060008173ffffffffffffffffffffffffffffffffffffffff16836040516106bf90611984565b60006040518083038185875af1925050503d80600081146106fc576040519150601f19603f3d011682016040523d82523d6000602084013e610701565b606091505b5050905080610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611ada565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107a79190611999565b60206040518083038186803b1580156107bf57600080fd5b505afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f7919061168f565b90506000811161083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611afa565b60405180910390fd5b6000805b8281101561096e576000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b81526004016108a79291906119b4565b60206040518083038186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f7919061168f565b90506007600082815260200190815260200160002060009054906101000a900460ff1661095a5760018361092b9190611c77565b925060016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50808061096690611de1565b915050610840565b50600082116109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611a9a565b60405180910390fd5b6109cf33678ac7230489e80000836109ca9190611ccd565b6112fc565b5050565b678ac7230489e8000081565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a4f61127e565b610a596000611453565b565b66038d7ea4c6800081565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a9f90611daf565b80601f0160208091040260200160405190810160405280929190818152602001828054610acb90611daf565b8015610b185780601f10610aed57610100808354040283529160200191610b18565b820191906000526020600020905b815481529060010190602001808311610afb57829003601f168201915b5050505050905090565b600066038d7ea4c6800082610b379190611ccd565b90506000670de0b6b3a764000083610b4f9190611ccd565b905081341015610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b90611b9a565b60405180910390fd5b69021e19e0c9bab240000081610ba86105b6565b610bb29190611c77565b1115610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea90611b3a565b60405180910390fd5b610bfd33826112fc565b505050565b600080610c0d610da7565b90506000610c1b8286610c9c565b905083811015610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5790611bda565b60405180910390fd5b610c6d8286868403610daf565b60019250505092915050565b600080610c84610da7565b9050610c91818585611006565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d2b61127e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9290611a3a565b60405180910390fd5b610da481611453565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1690611bba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690611a5a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f6d9190611c1a565b60405180910390a3505050565b6000610f868484610c9c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110005781811015610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe990611a7a565b60405180910390fd5b610fff8484848403610daf565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106d90611b7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd90611a1a565b60405180910390fd5b6110f1838383611519565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e90611aba565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112659190611c1a565b60405180910390a361127884848461151e565b50505050565b611286610da7565b73ffffffffffffffffffffffffffffffffffffffff166112a4610a66565b73ffffffffffffffffffffffffffffffffffffffff16146112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190611b1a565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136390611bfa565b60405180910390fd5b61137860008383611519565b806002600082825461138a9190611c77565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143b9190611c1a565b60405180910390a361144f6000838361151e565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b60008135905061153281612287565b92915050565b6000813590506115478161229e565b92915050565b60008151905061155c8161229e565b92915050565b60006020828403121561157857611577611e88565b5b600061158684828501611523565b91505092915050565b600080604083850312156115a6576115a5611e88565b5b60006115b485828601611523565b92505060206115c585828601611523565b9150509250929050565b6000806000606084860312156115e8576115e7611e88565b5b60006115f686828701611523565b935050602061160786828701611523565b925050604061161886828701611538565b9150509250925092565b6000806040838503121561163957611638611e88565b5b600061164785828601611523565b925050602061165885828601611538565b9150509250929050565b60006020828403121561167857611677611e88565b5b600061168684828501611538565b91505092915050565b6000602082840312156116a5576116a4611e88565b5b60006116b38482850161154d565b91505092915050565b6116c581611d27565b82525050565b6116d481611d39565b82525050565b60006116e582611c50565b6116ef8185611c66565b93506116ff818560208601611d7c565b61170881611e8d565b840191505092915050565b6000611720602383611c66565b915061172b82611e9e565b604082019050919050565b6000611743602683611c66565b915061174e82611eed565b604082019050919050565b6000611766602283611c66565b915061177182611f3c565b604082019050919050565b6000611789601d83611c66565b915061179482611f8b565b602082019050919050565b60006117ac602783611c66565b91506117b782611fb4565b604082019050919050565b60006117cf602683611c66565b91506117da82612003565b604082019050919050565b60006117f2601483611c66565b91506117fd82612052565b602082019050919050565b6000611815602083611c66565b91506118208261207b565b602082019050919050565b6000611838602083611c66565b9150611843826120a4565b602082019050919050565b600061185b601583611c66565b9150611866826120cd565b602082019050919050565b600061187e602b83611c66565b9150611889826120f6565b604082019050919050565b60006118a1602583611c66565b91506118ac82612145565b604082019050919050565b60006118c4600083611c5b565b91506118cf82612194565b600082019050919050565b60006118e7601683611c66565b91506118f282612197565b602082019050919050565b600061190a602483611c66565b9150611915826121c0565b604082019050919050565b600061192d602583611c66565b91506119388261220f565b604082019050919050565b6000611950601f83611c66565b915061195b8261225e565b602082019050919050565b61196f81611d65565b82525050565b61197e81611d6f565b82525050565b600061198f826118b7565b9150819050919050565b60006020820190506119ae60008301846116bc565b92915050565b60006040820190506119c960008301856116bc565b6119d66020830184611966565b9392505050565b60006020820190506119f260008301846116cb565b92915050565b60006020820190508181036000830152611a1281846116da565b905092915050565b60006020820190508181036000830152611a3381611713565b9050919050565b60006020820190508181036000830152611a5381611736565b9050919050565b60006020820190508181036000830152611a7381611759565b9050919050565b60006020820190508181036000830152611a938161177c565b9050919050565b60006020820190508181036000830152611ab38161179f565b9050919050565b60006020820190508181036000830152611ad3816117c2565b9050919050565b60006020820190508181036000830152611af3816117e5565b9050919050565b60006020820190508181036000830152611b1381611808565b9050919050565b60006020820190508181036000830152611b338161182b565b9050919050565b60006020820190508181036000830152611b538161184e565b9050919050565b60006020820190508181036000830152611b7381611871565b9050919050565b60006020820190508181036000830152611b9381611894565b9050919050565b60006020820190508181036000830152611bb3816118da565b9050919050565b60006020820190508181036000830152611bd3816118fd565b9050919050565b60006020820190508181036000830152611bf381611920565b9050919050565b60006020820190508181036000830152611c1381611943565b9050919050565b6000602082019050611c2f6000830184611966565b92915050565b6000602082019050611c4a6000830184611975565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611c8282611d65565b9150611c8d83611d65565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cc257611cc1611e2a565b5b828201905092915050565b6000611cd882611d65565b9150611ce383611d65565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d1c57611d1b611e2a565b5b828202905092915050565b6000611d3282611d45565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611d9a578082015181840152602081019050611d7f565b83811115611da9576000848401525b50505050565b60006002820490506001821680611dc757607f821691505b60208210811415611ddb57611dda611e59565b5b50919050565b6000611dec82611d65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e1f57611e1e611e2a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f596f75206861766520616c726561647920636c61696d656420616c6c2074686560008201527f20746f6b656e7300000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f596f7520646f6e2774206f776e20616e792043727970746f20446576204e6674600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f537570706c79206c696d69742065786365656465640000000000000000000000600082015250565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b50565b7f4554482073656e74206973206e6f7420656e6f75676800000000000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61229081611d27565b811461229b57600080fd5b50565b6122a781611d65565b81146122b257600080fd5b5056fea26469706673582212200779c377195f8f8d76f7d560c60ad0c10231ba005de44e1a15ae4eeb363367a264736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061012e5760003560e01c80635f3690af116100ab57806395d89b411161006f57806395d89b41146103da578063a0712d6814610405578063a457c2d714610421578063a9059cbb1461045e578063dd62ed3e1461049b578063f2fde38b146104d857610135565b80635f3690af146102f357806370a0823114610330578063715018a61461036d5780637ff9b596146103845780638da5cb5b146103af57610135565b8063313ce567116100f2578063313ce56714610232578063395093511461025d5780633ccfd60b1461029a5780634e71d92d146102b15780635afcc2f5146102c857610135565b806306fdde0314610137578063095ea7b31461016257806318160ddd1461019f57806323b872dd146101ca5780632ab4d0521461020757610135565b3661013557005b005b34801561014357600080fd5b5061014c610501565b60405161015991906119f8565b60405180910390f35b34801561016e57600080fd5b5061018960048036038101906101849190611622565b610593565b60405161019691906119dd565b60405180910390f35b3480156101ab57600080fd5b506101b46105b6565b6040516101c19190611c1a565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec91906115cf565b6105c0565b6040516101fe91906119dd565b60405180910390f35b34801561021357600080fd5b5061021c6105ef565b6040516102299190611c1a565b60405180910390f35b34801561023e57600080fd5b506102476105fd565b6040516102549190611c35565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190611622565b610606565b60405161029191906119dd565b60405180910390f35b3480156102a657600080fd5b506102af61063d565b005b3480156102bd57600080fd5b506102c661074a565b005b3480156102d457600080fd5b506102dd6109d3565b6040516102ea9190611c1a565b60405180910390f35b3480156102ff57600080fd5b5061031a60048036038101906103159190611662565b6109df565b60405161032791906119dd565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190611562565b6109ff565b6040516103649190611c1a565b60405180910390f35b34801561037957600080fd5b50610382610a47565b005b34801561039057600080fd5b50610399610a5b565b6040516103a69190611c1a565b60405180910390f35b3480156103bb57600080fd5b506103c4610a66565b6040516103d19190611999565b60405180910390f35b3480156103e657600080fd5b506103ef610a90565b6040516103fc91906119f8565b60405180910390f35b61041f600480360381019061041a9190611662565b610b22565b005b34801561042d57600080fd5b5061044860048036038101906104439190611622565b610c02565b60405161045591906119dd565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190611622565b610c79565b60405161049291906119dd565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd919061158f565b610c9c565b6040516104cf9190611c1a565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa9190611562565b610d23565b005b60606003805461051090611daf565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611daf565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b60008061059e610da7565b90506105ab818585610daf565b600191505092915050565b6000600254905090565b6000806105cb610da7565b90506105d8858285610f7a565b6105e3858585611006565b60019150509392505050565b69021e19e0c9bab240000081565b60006012905090565b600080610611610da7565b90506106328185856106238589610c9c565b61062d9190611c77565b610daf565b600191505092915050565b61064561127e565b60004790506000811161068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068490611b5a565b60405180910390fd5b6000610697610a66565b905060008173ffffffffffffffffffffffffffffffffffffffff16836040516106bf90611984565b60006040518083038185875af1925050503d80600081146106fc576040519150601f19603f3d011682016040523d82523d6000602084013e610701565b606091505b5050905080610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611ada565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107a79190611999565b60206040518083038186803b1580156107bf57600080fd5b505afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f7919061168f565b90506000811161083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611afa565b60405180910390fd5b6000805b8281101561096e576000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b81526004016108a79291906119b4565b60206040518083038186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f7919061168f565b90506007600082815260200190815260200160002060009054906101000a900460ff1661095a5760018361092b9190611c77565b925060016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50808061096690611de1565b915050610840565b50600082116109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611a9a565b60405180910390fd5b6109cf33678ac7230489e80000836109ca9190611ccd565b6112fc565b5050565b678ac7230489e8000081565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a4f61127e565b610a596000611453565b565b66038d7ea4c6800081565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a9f90611daf565b80601f0160208091040260200160405190810160405280929190818152602001828054610acb90611daf565b8015610b185780601f10610aed57610100808354040283529160200191610b18565b820191906000526020600020905b815481529060010190602001808311610afb57829003601f168201915b5050505050905090565b600066038d7ea4c6800082610b379190611ccd565b90506000670de0b6b3a764000083610b4f9190611ccd565b905081341015610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b90611b9a565b60405180910390fd5b69021e19e0c9bab240000081610ba86105b6565b610bb29190611c77565b1115610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea90611b3a565b60405180910390fd5b610bfd33826112fc565b505050565b600080610c0d610da7565b90506000610c1b8286610c9c565b905083811015610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5790611bda565b60405180910390fd5b610c6d8286868403610daf565b60019250505092915050565b600080610c84610da7565b9050610c91818585611006565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d2b61127e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9290611a3a565b60405180910390fd5b610da481611453565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1690611bba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690611a5a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f6d9190611c1a565b60405180910390a3505050565b6000610f868484610c9c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110005781811015610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe990611a7a565b60405180910390fd5b610fff8484848403610daf565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106d90611b7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd90611a1a565b60405180910390fd5b6110f1838383611519565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e90611aba565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112659190611c1a565b60405180910390a361127884848461151e565b50505050565b611286610da7565b73ffffffffffffffffffffffffffffffffffffffff166112a4610a66565b73ffffffffffffffffffffffffffffffffffffffff16146112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190611b1a565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136390611bfa565b60405180910390fd5b61137860008383611519565b806002600082825461138a9190611c77565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143b9190611c1a565b60405180910390a361144f6000838361151e565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b60008135905061153281612287565b92915050565b6000813590506115478161229e565b92915050565b60008151905061155c8161229e565b92915050565b60006020828403121561157857611577611e88565b5b600061158684828501611523565b91505092915050565b600080604083850312156115a6576115a5611e88565b5b60006115b485828601611523565b92505060206115c585828601611523565b9150509250929050565b6000806000606084860312156115e8576115e7611e88565b5b60006115f686828701611523565b935050602061160786828701611523565b925050604061161886828701611538565b9150509250925092565b6000806040838503121561163957611638611e88565b5b600061164785828601611523565b925050602061165885828601611538565b9150509250929050565b60006020828403121561167857611677611e88565b5b600061168684828501611538565b91505092915050565b6000602082840312156116a5576116a4611e88565b5b60006116b38482850161154d565b91505092915050565b6116c581611d27565b82525050565b6116d481611d39565b82525050565b60006116e582611c50565b6116ef8185611c66565b93506116ff818560208601611d7c565b61170881611e8d565b840191505092915050565b6000611720602383611c66565b915061172b82611e9e565b604082019050919050565b6000611743602683611c66565b915061174e82611eed565b604082019050919050565b6000611766602283611c66565b915061177182611f3c565b604082019050919050565b6000611789601d83611c66565b915061179482611f8b565b602082019050919050565b60006117ac602783611c66565b91506117b782611fb4565b604082019050919050565b60006117cf602683611c66565b91506117da82612003565b604082019050919050565b60006117f2601483611c66565b91506117fd82612052565b602082019050919050565b6000611815602083611c66565b91506118208261207b565b602082019050919050565b6000611838602083611c66565b9150611843826120a4565b602082019050919050565b600061185b601583611c66565b9150611866826120cd565b602082019050919050565b600061187e602b83611c66565b9150611889826120f6565b604082019050919050565b60006118a1602583611c66565b91506118ac82612145565b604082019050919050565b60006118c4600083611c5b565b91506118cf82612194565b600082019050919050565b60006118e7601683611c66565b91506118f282612197565b602082019050919050565b600061190a602483611c66565b9150611915826121c0565b604082019050919050565b600061192d602583611c66565b91506119388261220f565b604082019050919050565b6000611950601f83611c66565b915061195b8261225e565b602082019050919050565b61196f81611d65565b82525050565b61197e81611d6f565b82525050565b600061198f826118b7565b9150819050919050565b60006020820190506119ae60008301846116bc565b92915050565b60006040820190506119c960008301856116bc565b6119d66020830184611966565b9392505050565b60006020820190506119f260008301846116cb565b92915050565b60006020820190508181036000830152611a1281846116da565b905092915050565b60006020820190508181036000830152611a3381611713565b9050919050565b60006020820190508181036000830152611a5381611736565b9050919050565b60006020820190508181036000830152611a7381611759565b9050919050565b60006020820190508181036000830152611a938161177c565b9050919050565b60006020820190508181036000830152611ab38161179f565b9050919050565b60006020820190508181036000830152611ad3816117c2565b9050919050565b60006020820190508181036000830152611af3816117e5565b9050919050565b60006020820190508181036000830152611b1381611808565b9050919050565b60006020820190508181036000830152611b338161182b565b9050919050565b60006020820190508181036000830152611b538161184e565b9050919050565b60006020820190508181036000830152611b7381611871565b9050919050565b60006020820190508181036000830152611b9381611894565b9050919050565b60006020820190508181036000830152611bb3816118da565b9050919050565b60006020820190508181036000830152611bd3816118fd565b9050919050565b60006020820190508181036000830152611bf381611920565b9050919050565b60006020820190508181036000830152611c1381611943565b9050919050565b6000602082019050611c2f6000830184611966565b92915050565b6000602082019050611c4a6000830184611975565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611c8282611d65565b9150611c8d83611d65565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cc257611cc1611e2a565b5b828201905092915050565b6000611cd882611d65565b9150611ce383611d65565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d1c57611d1b611e2a565b5b828202905092915050565b6000611d3282611d45565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611d9a578082015181840152602081019050611d7f565b83811115611da9576000848401525b50505050565b60006002820490506001821680611dc757607f821691505b60208210811415611ddb57611dda611e59565b5b50919050565b6000611dec82611d65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e1f57611e1e611e2a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f596f75206861766520616c726561647920636c61696d656420616c6c2074686560008201527f20746f6b656e7300000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f596f7520646f6e2774206f776e20616e792043727970746f20446576204e6674600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f537570706c79206c696d69742065786365656465640000000000000000000000600082015250565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b50565b7f4554482073656e74206973206e6f7420656e6f75676800000000000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61229081611d27565b811461229b57600080fd5b50565b6122a781611d65565b81146122b257600080fd5b5056fea26469706673582212200779c377195f8f8d76f7d560c60ad0c10231ba005de44e1a15ae4eeb363367a264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 128,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 134,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 136,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 138,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 140,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 853,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "CryptoDevsNft",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ICryptoDevs)1061"
      },
      {
        "astId": 857,
        "contract": "contracts/CryptoDevToken.sol:CryptoDevToken",
        "label": "tokenIdsClaimed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICryptoDevs)1061": {
        "encoding": "inplace",
        "label": "contract ICryptoDevs",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}